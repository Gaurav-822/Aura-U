# compiler: R8
# compiler_version: 3.1.66
# pg_map_id: 8e368a7
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"1.0"}
com.unity.androidnotifications.NotificationChannelWrapper -> com.unity.androidnotifications.a:
    long[] vibrationPattern -> c
    java.lang.String id -> a
    int lockscreenVisibility -> d
    int importance -> b
    java.lang.String group -> e
com.unity.androidnotifications.UnityNotificationBackgroundThread -> com.unity.androidnotifications.b:
    java.util.concurrent.LinkedTransferQueue mTasks -> a
    com.unity.androidnotifications.UnityNotificationManager mManager -> c
    java.util.concurrent.ConcurrentHashMap mScheduledNotifications -> b
    int mTasksSinceHousekeeping -> d
    1:1:void enqueueHousekeeping():0:0 -> a
    1:1:void loadNotifications():0 -> a
    1:1:boolean executeTask(com.unity.androidnotifications.UnityNotificationManager,com.unity.androidnotifications.UnityNotificationBackgroundThread$Task,java.util.concurrent.ConcurrentHashMap):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void enqueueHousekeeping():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
com.unity.androidnotifications.UnityNotificationBackgroundThread$1 -> com.unity.androidnotifications.b$a:
com.unity.androidnotifications.UnityNotificationBackgroundThread$CancelAllNotificationsTask -> com.unity.androidnotifications.b$b:
    boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap) -> a
com.unity.androidnotifications.UnityNotificationBackgroundThread$CancelNotificationTask -> com.unity.androidnotifications.b$c:
    int notificationId -> a
    boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap) -> a
com.unity.androidnotifications.UnityNotificationBackgroundThread$HousekeepingTask -> com.unity.androidnotifications.b$d:
    com.unity.androidnotifications.UnityNotificationBackgroundThread thread -> a
    1:1:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0:0 -> a
    1:1:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
    1:1:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
    2:2:void com.unity.androidnotifications.UnityNotificationManager.performNotificationHousekeeping(java.util.Set):0:0 -> a
    2:2:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0 -> a
    2:2:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
    2:2:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
    3:3:java.util.Set com.unity.androidnotifications.UnityNotificationManager.findInvalidNotificationIds(java.util.Set):0:0 -> a
    3:3:void com.unity.androidnotifications.UnityNotificationManager.performNotificationHousekeeping(java.util.Set):0 -> a
    3:3:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0 -> a
    3:3:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
    3:3:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
    4:4:void com.unity.androidnotifications.UnityNotificationManager.performNotificationHousekeeping(java.util.Set):0:0 -> a
    4:4:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0 -> a
    4:4:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
    4:4:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
    5:5:java.util.Set com.unity.androidnotifications.UnityNotificationManager.findInvalidNotificationIds(java.util.Set):0:0 -> a
    5:5:void com.unity.androidnotifications.UnityNotificationManager.performNotificationHousekeeping(java.util.Set):0 -> a
    5:5:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0 -> a
    5:5:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
    5:5:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
    6:6:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0:0 -> a
    6:6:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
    6:6:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
    7:7:void com.unity.androidnotifications.UnityNotificationManager.saveScheduledNotificationIDs(java.util.Set):0:0 -> a
    7:7:void com.unity.androidnotifications.UnityNotificationBackgroundThread.performHousekeeping(java.util.Set):0 -> a
    7:7:void com.unity.androidnotifications.UnityNotificationBackgroundThread.access$100(com.unity.androidnotifications.UnityNotificationBackgroundThread,java.util.Set):0 -> a
    7:7:boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap):0 -> a
com.unity.androidnotifications.UnityNotificationBackgroundThread$ScheduleNotificationTask -> com.unity.androidnotifications.b$e:
    android.app.Notification$Builder notificationBuilder -> b
    boolean isCustomized -> c
    int notificationId -> a
    boolean isNew -> d
    boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap) -> a
com.unity.androidnotifications.UnityNotificationBackgroundThread$Task -> com.unity.androidnotifications.b$f:
    boolean run(com.unity.androidnotifications.UnityNotificationManager,java.util.concurrent.ConcurrentHashMap) -> a
com.unity.androidnotifications.UnityNotificationManager -> com.unity.androidnotifications.UnityNotificationManager:
    android.content.Context mContext -> a
    java.util.concurrent.ConcurrentHashMap mScheduledNotifications -> g
    com.unity.androidnotifications.UnityNotificationBackgroundThread mBackgroundThread -> d
    java.util.Random mRandom -> e
    int mExactSchedulingSetting -> i
    com.unity.androidnotifications.UnityNotificationManager mUnityNotificationManager -> j
    java.util.HashSet mVisibleNotifications -> f
    com.unity.androidnotifications.NotificationCallback mNotificationCallback -> h
    android.app.Activity mActivity -> b
    java.lang.Class mOpenActivity -> c
    1:1:android.app.PendingIntent getActivityPendingIntent(int,android.content.Intent,int):0:0 -> a
    1:1:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    2:2:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0:0 -> a
    3:3:void finalizeNotificationForDisplay(android.app.Notification$Builder):0:0 -> a
    3:3:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    4:4:void setupBigPictureStyle(android.app.Notification$Builder):0:0 -> a
    4:4:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    4:4:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    5:5:android.graphics.Bitmap loadBitmap(java.lang.String):0:0 -> a
    5:5:void setupBigPictureStyle(android.app.Notification$Builder):0 -> a
    5:5:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    5:5:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    6:6:void setupBigPictureStyle(android.app.Notification$Builder):0:0 -> a
    6:6:void finalizeNotificationForDisplay(android.app.Notification$Builder):0 -> a
    6:6:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0 -> a
    7:7:android.app.Notification buildNotificationForSending(java.lang.Class,android.app.Notification$Builder):0:0 -> a
    android.content.Intent buildNotificationIntent() -> a
    8:8:android.os.Bundle getAppMetadata():0:0 -> a
    8:8:boolean canScheduleExactAlarms(android.app.AlarmManager):0 -> a
    9:9:boolean canScheduleExactAlarms(android.app.AlarmManager):0:0 -> a
    void cancelPendingNotificationIntent(int) -> a
    void deleteExpiredNotificationIntent(java.lang.String) -> a
    android.app.Notification$Builder deserializeNotificationBuilder(java.lang.Integer) -> a
    android.app.PendingIntent getBroadcastPendingIntent(int,android.content.Intent,int) -> a
    java.lang.Object getIconFromResources(java.lang.String,boolean) -> a
    com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.content.Context) -> a
    java.lang.Object getNotificationOrIdForIntent(android.content.Intent) -> a
    com.unity.androidnotifications.NotificationChannelWrapper notificationChannelToWrapper(java.lang.Object) -> a
    void notify(int,android.app.Notification$Builder) -> a
    10:10:boolean isInForeground():0:0 -> a
    10:10:void notify(int,android.app.Notification):0 -> a
    11:11:void notify(int,android.app.Notification):0:0 -> a
    12:12:void saveNotification(android.app.Notification,boolean):0:0 -> a
    12:12:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    13:13:void com.unity.androidnotifications.UnityNotificationUtilities.serializeNotification(android.content.SharedPreferences,android.app.Notification,boolean):0:0 -> a
    13:13:void saveNotification(android.app.Notification,boolean):0 -> a
    13:13:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    14:14:boolean com.unity.androidnotifications.UnityNotificationUtilities.serializeNotificationParcel(android.content.Intent,java.io.DataOutputStream):0:0 -> a
    14:14:void com.unity.androidnotifications.UnityNotificationUtilities.serializeNotification(android.content.SharedPreferences,android.app.Notification,boolean):0 -> a
    14:14:void saveNotification(android.app.Notification,boolean):0 -> a
    14:14:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    15:15:void com.unity.androidnotifications.UnityNotificationUtilities.serializeNotification(android.content.SharedPreferences,android.app.Notification,boolean):0:0 -> a
    15:15:void saveNotification(android.app.Notification,boolean):0 -> a
    15:15:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0 -> a
    16:16:void performNotificationScheduling(int,android.app.Notification$Builder,boolean):0:0 -> a
    17:17:void scheduleNotificationIntentAlarm(long,long,android.app.PendingIntent):0:0 -> a
    17:17:void scheduleAlarmWithNotification(android.app.Notification$Builder,android.content.Intent,long):0 -> a
    java.lang.Object getIcon(java.lang.String) -> b
    void lambda$showNotification$0(java.lang.Integer) -> b
    1:1:java.util.Set getScheduledNotificationIDs():0:0 -> b
    1:1:java.util.List loadSavedNotifications():0 -> b
    2:2:java.util.List loadSavedNotifications():0:0 -> b
    3:3:void saveScheduledNotificationIDs(java.util.Set):0:0 -> b
    3:3:java.util.List loadSavedNotifications():0 -> b
    void showNotification(android.content.Intent) -> b
    java.lang.Object getIconForUri(java.lang.String) -> c
    1:1:void com.unity.androidnotifications.UnityNotificationBackgroundThread.enqueueCancelAllNotifications():0:0 -> cancelAllPendingNotificationIntents
    1:1:void cancelAllPendingNotificationIntents():0 -> cancelAllPendingNotificationIntents
    2:2:void com.unity.androidnotifications.UnityNotificationBackgroundThread$CancelAllNotificationsTask.<init>(com.unity.androidnotifications.UnityNotificationBackgroundThread$1):0:0 -> cancelAllPendingNotificationIntents
    2:2:void com.unity.androidnotifications.UnityNotificationBackgroundThread.enqueueCancelAllNotifications():0 -> cancelAllPendingNotificationIntents
    2:2:void cancelAllPendingNotificationIntents():0 -> cancelAllPendingNotificationIntents
    3:3:void com.unity.androidnotifications.UnityNotificationBackgroundThread.enqueueCancelAllNotifications():0:0 -> cancelAllPendingNotificationIntents
    3:3:void cancelAllPendingNotificationIntents():0 -> cancelAllPendingNotificationIntents
    1:1:void com.unity.androidnotifications.UnityNotificationBackgroundThread.enqueueCancelNotification(int):0:0 -> cancelPendingNotification
    1:1:void cancelPendingNotification(int):0 -> cancelPendingNotification
    java.lang.String getSharedPrefsNameByChannelId(java.lang.String) -> d
    java.lang.String getSharedPrefsNameByNotificationId(java.lang.String) -> e
    1:1:java.lang.Object getNotificationOrBuilderForIntent(android.content.Intent):0:0 -> getNotificationFromIntent
    1:1:android.app.Notification getNotificationFromIntent(android.content.Intent):0 -> getNotificationFromIntent
    2:2:android.app.Notification getNotificationFromIntent(android.content.Intent):0:0 -> getNotificationFromIntent
    1:1:void initialize(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0:0 -> getNotificationManagerImpl
    1:1:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    2:2:android.os.Bundle getAppMetadata():0:0 -> getNotificationManagerImpl
    2:2:void initialize(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    2:2:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    3:3:void initialize(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0:0 -> getNotificationManagerImpl
    3:3:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    4:4:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0:0 -> getNotificationManagerImpl
    5:5:void initialize(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0:0 -> getNotificationManagerImpl
    5:5:com.unity.androidnotifications.UnityNotificationManager getNotificationManagerImpl(android.app.Activity,com.unity.androidnotifications.NotificationCallback):0 -> getNotificationManagerImpl
    1:1:int generateUniqueId():0:0 -> scheduleNotification
    1:1:int scheduleNotification(android.app.Notification$Builder,boolean):0 -> scheduleNotification
    2:2:int scheduleNotification(android.app.Notification$Builder,boolean):0:0 -> scheduleNotification
    3:3:void com.unity.androidnotifications.UnityNotificationBackgroundThread.enqueueNotification(int,android.app.Notification$Builder,boolean,boolean):0:0 -> scheduleNotification
    3:3:int scheduleNotification(android.app.Notification$Builder,boolean):0 -> scheduleNotification
com.unity.androidnotifications.UnityNotificationRestartReceiver -> com.unity.androidnotifications.UnityNotificationRestartReceiver:
    1:1:void rescheduleSavedNotifications(android.content.Context):0:0 -> a
    1:1:void lambda$onReceive$0(android.content.Context):0 -> a
    2:2:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0:0 -> a
    2:2:void rescheduleSavedNotifications(android.content.Context):0 -> a
    2:2:void lambda$onReceive$0(android.content.Context):0 -> a
    3:3:void com.unity.androidnotifications.UnityNotificationManager.scheduleAlarmWithNotification(android.app.Notification$Builder):0:0 -> a
    3:3:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0 -> a
    3:3:void rescheduleSavedNotifications(android.content.Context):0 -> a
    3:3:void lambda$onReceive$0(android.content.Context):0 -> a
    4:4:boolean rescheduleNotification(com.unity.androidnotifications.UnityNotificationManager,java.util.Date,android.app.Notification$Builder):0:0 -> a
    4:4:void rescheduleSavedNotifications(android.content.Context):0 -> a
    4:4:void lambda$onReceive$0(android.content.Context):0 -> a
com.unity.androidnotifications.UnityNotificationUtilities -> com.unity.androidnotifications.c:
    byte[] UNITY_MAGIC_NUMBER_PARCELLED -> b
    byte[] UNITY_MAGIC_NUMBER -> a
    java.lang.Object deserializeNotification(android.content.Context,android.content.SharedPreferences) -> a
    1:1:android.app.Notification deserializeNotificationParcelable(java.io.DataInputStream):0:0 -> a
    1:1:java.lang.Object deserializeNotification(android.content.Context,byte[]):0 -> a
    2:2:java.lang.Object deserializeNotification(android.content.Context,byte[]):0:0 -> a
    3:3:android.app.Notification$Builder deserializeNotificationCustom(android.content.Context,java.io.DataInputStream):0:0 -> a
    3:3:java.lang.Object deserializeNotification(android.content.Context,byte[]):0 -> a
    4:4:android.app.Notification$Builder deserializedFromOldIntent(android.content.Context,byte[]):0:0 -> a
    4:4:java.lang.Object deserializeNotification(android.content.Context,byte[]):0 -> a
    android.os.Parcelable deserializeParcelable(java.io.DataInputStream) -> a
    int findResourceIdInContextByName(android.content.Context,java.lang.String) -> a
    5:5:boolean isUnityActivity(java.lang.String):0:0 -> a
    5:5:java.lang.Class getOpenAppActivity(android.content.Context):0 -> a
    6:6:java.lang.Class getOpenAppActivity(android.content.Context):0:0 -> a
    boolean readAndCheckMagicNumber(java.io.DataInputStream,byte[]) -> a
    7:7:android.app.Notification$Builder recoverBuilderCustom(android.content.Context,android.app.Notification):0:0 -> a
    7:7:android.app.Notification$Builder recoverBuilder(android.content.Context,android.app.Notification):0 -> a
    boolean serializeNotificationCustom(android.app.Notification,java.io.DataOutputStream) -> a
    byte[] serializeParcelable(android.os.Parcelable) -> a
    void serializeString(java.io.DataOutputStream,java.lang.String) -> a
    java.lang.String deserializeString(java.io.DataInputStream) -> b
com.unity3d.player.G -> a.a:
com.unity3d.player.NetworkConnectivity -> a.b:
    int b() -> a
com.unity3d.player.NetworkConnectivityNougat -> a.c:
    int b() -> a
com.unity3d.player.NetworkConnectivityNougat$a -> a.c$a:
com.unity3d.player.PlatformSupport -> a.d:
    boolean MARSHMALLOW_SUPPORT -> a
    boolean NOUGAT_SUPPORT -> b
com.unity3d.player.UnityPlayer -> com.unity3d.player.UnityPlayer:
    com.unity3d.player.NetworkConnectivity m_NetworkConnectivity -> a
    int m_IsNoWindowMode -> b
    int $r8$clinit -> c
    1:1:boolean com.unity3d.player.G.a():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    void runOnUiThread(java.lang.Runnable) -> a
com.unity3d.player.UnityPlayer$e -> com.unity3d.player.UnityPlayer$a:
    com.unity3d.player.UnityPlayer b -> a
com.unity3d.player.UnityPlayer$f -> com.unity3d.player.UnityPlayer$b:
    com.unity3d.player.UnityPlayer b -> a
com.unity3d.player.UnityPlayer$g -> com.unity3d.player.UnityPlayer$c:
    com.unity3d.player.UnityPlayer b -> a
com.unity3d.player.u -> a.e:
    void Log(int,java.lang.String) -> a
